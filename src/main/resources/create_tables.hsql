CREATE TABLE IF NOT EXISTS  user (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
  name VARCHAR(45) NULL,
  dateCreate DATETIME NULL,
  PRIMARY KEY (id));


CREATE TABLE IF NOT EXISTS image (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
  url VARCHAR(45) NULL,
  name VARCHAR(45) NULL,
  dateCreate DATETIME NULL,
  dateEdit DATETIME NULL,
  likes INT NULL,
  dislikes INT NULL,
  idUser INT NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FK_Image_User FOREIGN KEY (idUser)
    REFERENCES user(id)
);


CREATE TABLE IF NOT EXISTS comment (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
  text VARCHAR(250) NULL,
  dateCreate DATETIME NULL,
  dateEdit DATETIME NULL,
  likes INT NULL,
  dislikes INT NULL,
  idUser INT NOT NULL,
  idImage INT NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FK_Comment_User FOREIGN KEY (idUser)
    REFERENCES user(id),

  CONSTRAINT FK_Comment_Image FOREIGN KEY (idImage)
    REFERENCES image(id)
);
--ALTER TABLE comment ADD FOREIGN KEY (idUser) REFERENCES user(id);
--CREATE INDEX fk_comment_user1_idx ON comment (idUser);

--ALTER TABLE comment ADD FOREIGN KEY (idImage) REFERENCES image(id);
--CREATE INDEX fk_comment_image1_idx ON comment (idImage);




CREATE TABLE IF NOT EXISTS tag (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
  value VARCHAR(16) NULL,
  PRIMARY KEY (id));


CREATE TABLE IF NOT EXISTS Image_Tag (
  Image_id INT NOT NULL,
  Tag_id INT NOT NULL,
  PRIMARY KEY (Image_id, Tag_id),
  CONSTRAINT FK_ImageTag_Image FOREIGN KEY (Image_id)
    REFERENCES image(id),
  CONSTRAINT FK_ImageTag_Tag FOREIGN KEY (Tag_id)
    REFERENCES tag(id)
);
--ALTER TABLE image_has_tag ADD FOREIGN KEY (idImage) REFERENCES image(id);
--CREATE INDEX fk_image_has_tag_image1_idx ON image_has_tag (idImage);

--ALTER TABLE image_has_tag ADD FOREIGN KEY (tag_idtag) REFERENCES tag(id);
--CREATE INDEX fk_image_has_tag_tag1_idx ON image_has_tag (tag_idtag);